{"ast":null,"code":"var iconv,\n    inherits = require('util').inherits,\n    stream = require('stream');\n\nvar regex = /(?:charset|encoding)\\s*=\\s*['\"]? *([\\w\\-]+)/i;\ninherits(StreamDecoder, stream.Transform);\n\nfunction StreamDecoder(charset) {\n  if (!(this instanceof StreamDecoder)) return new StreamDecoder(charset);\n  stream.Transform.call(this, charset);\n  this.charset = charset;\n  this.parsed_chunk = false;\n}\n\nStreamDecoder.prototype._transform = function (chunk, encoding, done) {\n  // try to get charset from chunk, but just once\n  if (!this.parsed_chunk && (this.charset == 'utf-8' || this.charset == 'utf8')) {\n    this.parsed_chunk = true;\n    var matches = regex.exec(chunk.toString());\n\n    if (matches) {\n      var found = matches[1].toLowerCase().replace('utf8', 'utf-8'); // canonicalize;\n      // set charset, but only if iconv can handle it\n\n      if (iconv.encodingExists(found)) this.charset = found;\n    }\n  }\n\n  if (this.charset == 'utf-8') {\n    // no need to decode, just pass through\n    this.push(chunk);\n    return done();\n  } // initialize stream decoder if not present\n\n\n  var self = this;\n\n  if (!this.decoder) {\n    this.decoder = iconv.decodeStream(this.charset);\n    this.decoder.on('data', function (decoded_chunk) {\n      self.push(decoded_chunk);\n    });\n  }\n\n  ;\n  this.decoder.write(chunk);\n  done();\n};\n\nmodule.exports = function (charset) {\n  try {\n    if (!iconv) iconv = require('iconv-lite');\n  } catch (e) {\n    /* iconv not found */\n  }\n\n  if (iconv) return new StreamDecoder(charset);else return new stream.PassThrough();\n};","map":{"version":3,"names":["iconv","inherits","require","stream","regex","StreamDecoder","Transform","charset","call","parsed_chunk","prototype","_transform","chunk","encoding","done","matches","exec","toString","found","toLowerCase","replace","encodingExists","push","self","decoder","decodeStream","on","decoded_chunk","write","module","exports","e","PassThrough"],"sources":["/mnt/c/users/46721/documents/iths/ITHS-Dashboard/node_modules/needle/lib/decoder.js"],"sourcesContent":["var iconv,\n    inherits  = require('util').inherits,\n    stream    = require('stream');\n\nvar regex = /(?:charset|encoding)\\s*=\\s*['\"]? *([\\w\\-]+)/i;\n\ninherits(StreamDecoder, stream.Transform);\n\nfunction StreamDecoder(charset) {\n  if (!(this instanceof StreamDecoder))\n    return new StreamDecoder(charset);\n\n  stream.Transform.call(this, charset);\n  this.charset = charset;\n  this.parsed_chunk = false;\n}\n\nStreamDecoder.prototype._transform = function(chunk, encoding, done) {\n  // try to get charset from chunk, but just once\n  if (!this.parsed_chunk && (this.charset == 'utf-8' || this.charset == 'utf8')) {\n    this.parsed_chunk = true;\n\n    var matches = regex.exec(chunk.toString());\n    if (matches) {\n      var found = matches[1].toLowerCase().replace('utf8', 'utf-8'); // canonicalize;\n      // set charset, but only if iconv can handle it\n      if (iconv.encodingExists(found)) this.charset = found;\n    }\n  }\n\n  if (this.charset == 'utf-8') { // no need to decode, just pass through\n    this.push(chunk);\n    return done();\n  }\n\n  // initialize stream decoder if not present\n  var self = this;\n  if (!this.decoder) {\n    this.decoder = iconv.decodeStream(this.charset);\n    this.decoder.on('data', function(decoded_chunk) {\n      self.push(decoded_chunk);\n    });\n  };\n\n  this.decoder.write(chunk);\n  done();\n}\n\nmodule.exports = function(charset) {\n  try {\n    if (!iconv) iconv = require('iconv-lite');\n  } catch(e) {\n    /* iconv not found */\n  }\n\n  if (iconv)\n    return new StreamDecoder(charset);\n  else\n    return new stream.PassThrough;\n}\n"],"mappings":"AAAA,IAAIA,KAAJ;AAAA,IACIC,QAAQ,GAAIC,OAAO,CAAC,MAAD,CAAP,CAAgBD,QADhC;AAAA,IAEIE,MAAM,GAAMD,OAAO,CAAC,QAAD,CAFvB;;AAIA,IAAIE,KAAK,GAAG,8CAAZ;AAEAH,QAAQ,CAACI,aAAD,EAAgBF,MAAM,CAACG,SAAvB,CAAR;;AAEA,SAASD,aAAT,CAAuBE,OAAvB,EAAgC;EAC9B,IAAI,EAAE,gBAAgBF,aAAlB,CAAJ,EACE,OAAO,IAAIA,aAAJ,CAAkBE,OAAlB,CAAP;EAEFJ,MAAM,CAACG,SAAP,CAAiBE,IAAjB,CAAsB,IAAtB,EAA4BD,OAA5B;EACA,KAAKA,OAAL,GAAeA,OAAf;EACA,KAAKE,YAAL,GAAoB,KAApB;AACD;;AAEDJ,aAAa,CAACK,SAAd,CAAwBC,UAAxB,GAAqC,UAASC,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;EACnE;EACA,IAAI,CAAC,KAAKL,YAAN,KAAuB,KAAKF,OAAL,IAAgB,OAAhB,IAA2B,KAAKA,OAAL,IAAgB,MAAlE,CAAJ,EAA+E;IAC7E,KAAKE,YAAL,GAAoB,IAApB;IAEA,IAAIM,OAAO,GAAGX,KAAK,CAACY,IAAN,CAAWJ,KAAK,CAACK,QAAN,EAAX,CAAd;;IACA,IAAIF,OAAJ,EAAa;MACX,IAAIG,KAAK,GAAGH,OAAO,CAAC,CAAD,CAAP,CAAWI,WAAX,GAAyBC,OAAzB,CAAiC,MAAjC,EAAyC,OAAzC,CAAZ,CADW,CACoD;MAC/D;;MACA,IAAIpB,KAAK,CAACqB,cAAN,CAAqBH,KAArB,CAAJ,EAAiC,KAAKX,OAAL,GAAeW,KAAf;IAClC;EACF;;EAED,IAAI,KAAKX,OAAL,IAAgB,OAApB,EAA6B;IAAE;IAC7B,KAAKe,IAAL,CAAUV,KAAV;IACA,OAAOE,IAAI,EAAX;EACD,CAhBkE,CAkBnE;;;EACA,IAAIS,IAAI,GAAG,IAAX;;EACA,IAAI,CAAC,KAAKC,OAAV,EAAmB;IACjB,KAAKA,OAAL,GAAexB,KAAK,CAACyB,YAAN,CAAmB,KAAKlB,OAAxB,CAAf;IACA,KAAKiB,OAAL,CAAaE,EAAb,CAAgB,MAAhB,EAAwB,UAASC,aAAT,EAAwB;MAC9CJ,IAAI,CAACD,IAAL,CAAUK,aAAV;IACD,CAFD;EAGD;;EAAA;EAED,KAAKH,OAAL,CAAaI,KAAb,CAAmBhB,KAAnB;EACAE,IAAI;AACL,CA7BD;;AA+BAe,MAAM,CAACC,OAAP,GAAiB,UAASvB,OAAT,EAAkB;EACjC,IAAI;IACF,IAAI,CAACP,KAAL,EAAYA,KAAK,GAAGE,OAAO,CAAC,YAAD,CAAf;EACb,CAFD,CAEE,OAAM6B,CAAN,EAAS;IACT;EACD;;EAED,IAAI/B,KAAJ,EACE,OAAO,IAAIK,aAAJ,CAAkBE,OAAlB,CAAP,CADF,KAGE,OAAO,IAAIJ,MAAM,CAAC6B,WAAX,EAAP;AACH,CAXD"},"metadata":{},"sourceType":"script"}