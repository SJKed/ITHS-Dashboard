{"ast":null,"code":"var createHash = require('crypto').createHash;\n\nfunction get_header(header, credentials, opts) {\n  var type = header.split(' ')[0],\n      user = credentials[0],\n      pass = credentials[1];\n\n  if (type == 'Digest') {\n    return digest.generate(header, user, pass, opts.method, opts.path);\n  } else if (type == 'Basic') {\n    return basic(user, pass);\n  }\n} ////////////////////\n// basic\n\n\nfunction md5(string) {\n  return createHash('md5').update(string).digest('hex');\n}\n\nfunction basic(user, pass) {\n  var str = typeof pass == 'undefined' ? user : [user, pass].join(':');\n  return 'Basic ' + Buffer.from(str).toString('base64');\n} ////////////////////\n// digest\n// logic inspired from https://github.com/simme/node-http-digest-client\n\n\nvar digest = {};\n\ndigest.parse_header = function (header) {\n  var challenge = {},\n      matches = header.match(/([a-z0-9_-]+)=\"?([a-z0-9_=\\/\\.@\\s-\\+)()]+)\"?/gi);\n\n  for (var i = 0, l = matches.length; i < l; i++) {\n    var parts = matches[i].split('='),\n        key = parts.shift(),\n        val = parts.join('=').replace(/^\"/, '').replace(/\"$/, '');\n    challenge[key] = val;\n  }\n\n  return challenge;\n};\n\ndigest.update_nc = function (nc) {\n  var max = 99999999;\n  nc++;\n  if (nc > max) nc = 1;\n  var padding = new Array(8).join('0') + '';\n  nc = nc + '';\n  return padding.substr(0, 8 - nc.length) + nc;\n};\n\ndigest.generate = function (header, user, pass, method, path) {\n  var nc = 1,\n      cnonce = null,\n      challenge = digest.parse_header(header);\n  var ha1 = md5(user + ':' + challenge.realm + ':' + pass),\n      ha2 = md5(method.toUpperCase() + ':' + path),\n      resp = [ha1, challenge.nonce];\n\n  if (typeof challenge.qop === 'string') {\n    cnonce = md5(Math.random().toString(36)).substr(0, 8);\n    nc = digest.update_nc(nc);\n    resp = resp.concat(nc, cnonce);\n    resp = resp.concat(challenge.qop, ha2);\n  } else {\n    resp = resp.concat(ha2);\n  }\n\n  var params = {\n    uri: path,\n    realm: challenge.realm,\n    nonce: challenge.nonce,\n    username: user,\n    response: md5(resp.join(':'))\n  };\n\n  if (challenge.qop) {\n    params.qop = challenge.qop;\n  }\n\n  if (challenge.opaque) {\n    params.opaque = challenge.opaque;\n  }\n\n  if (cnonce) {\n    params.nc = nc;\n    params.cnonce = cnonce;\n  }\n\n  header = [];\n\n  for (var k in params) header.push(k + '=\"' + params[k] + '\"');\n\n  return 'Digest ' + header.join(', ');\n};\n\nmodule.exports = {\n  header: get_header,\n  basic: basic,\n  digest: digest.generate\n};","map":{"version":3,"names":["createHash","require","get_header","header","credentials","opts","type","split","user","pass","digest","generate","method","path","basic","md5","string","update","str","join","Buffer","from","toString","parse_header","challenge","matches","match","i","l","length","parts","key","shift","val","replace","update_nc","nc","max","padding","Array","substr","cnonce","ha1","realm","ha2","toUpperCase","resp","nonce","qop","Math","random","concat","params","uri","username","response","opaque","k","push","module","exports"],"sources":["/mnt/c/users/46721/documents/iths/ITHS-Dashboard/node_modules/needle/lib/auth.js"],"sourcesContent":["var createHash = require('crypto').createHash;\n\nfunction get_header(header, credentials, opts) {\n  var type = header.split(' ')[0],\n      user = credentials[0],\n      pass = credentials[1];\n\n  if (type == 'Digest') {\n    return digest.generate(header, user, pass, opts.method, opts.path);\n  } else if (type == 'Basic') {\n    return basic(user, pass);\n  }\n}\n\n////////////////////\n// basic\n\nfunction md5(string) {\n  return createHash('md5').update(string).digest('hex');\n}\n\nfunction basic(user, pass) {\n  var str  = typeof pass == 'undefined' ? user : [user, pass].join(':');\n  return 'Basic ' + Buffer.from(str).toString('base64');\n}\n\n////////////////////\n// digest\n// logic inspired from https://github.com/simme/node-http-digest-client\n\nvar digest = {};\n\ndigest.parse_header = function(header) {\n  var challenge = {},\n      matches   = header.match(/([a-z0-9_-]+)=\"?([a-z0-9_=\\/\\.@\\s-\\+)()]+)\"?/gi);\n\n  for (var i = 0, l = matches.length; i < l; i++) {\n    var parts = matches[i].split('='),\n        key   = parts.shift(),\n        val   = parts.join('=').replace(/^\"/, '').replace(/\"$/, '');\n\n    challenge[key] = val;\n  }\n\n  return challenge;\n}\n\ndigest.update_nc = function(nc) {\n  var max = 99999999;\n  nc++;\n\n  if (nc > max)\n    nc = 1;\n\n  var padding = new Array(8).join('0') + '';\n  nc = nc + '';\n  return padding.substr(0, 8 - nc.length) + nc;\n}\n\ndigest.generate = function(header, user, pass, method, path) {\n\n  var nc        = 1,\n      cnonce    = null,\n      challenge = digest.parse_header(header);\n\n  var ha1  = md5(user + ':' + challenge.realm + ':' + pass),\n      ha2  = md5(method.toUpperCase() + ':' + path),\n      resp = [ha1, challenge.nonce];\n\n  if (typeof challenge.qop === 'string') {\n    cnonce = md5(Math.random().toString(36)).substr(0, 8);\n    nc     = digest.update_nc(nc);\n    resp   = resp.concat(nc, cnonce);\n    resp   = resp.concat(challenge.qop, ha2);\n  } else {\n    resp   = resp.concat(ha2);\n  }\n\n\n  var params = {\n    uri      : path,\n    realm    : challenge.realm,\n    nonce    : challenge.nonce,\n    username : user,\n    response : md5(resp.join(':'))\n  }\n\n  if (challenge.qop) {\n    params.qop = challenge.qop;\n  }\n\n  if (challenge.opaque) {\n    params.opaque = challenge.opaque;\n  }\n\n  if (cnonce) {\n    params.nc = nc;\n    params.cnonce = cnonce;\n  }\n\n  header = []\n  for (var k in params)\n    header.push(k + '=\"' + params[k] + '\"')\n\n  return 'Digest ' + header.join(', ');\n}\n\nmodule.exports = {\n  header : get_header,\n  basic  : basic,\n  digest : digest.generate\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}